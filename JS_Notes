Day 2: 
  transform-origin style: This moves the origin of an object. By default it is 50% which is in the middle of the object, but 0% puts the 
  origin on the left side of the object, and 100% puts it on the right side.
  
  transition style: This makes any changes happen over some interval in seconds.
Day 3:
  So basically, this is teaching us to be able to put variables in our CSS. This is done
  by creating a :root style and puting the variables in there. An example looks like this:
    :root {
      --base: #ffc600;
      --spacing: 10px;
      --blur: 10px;
    }
  So -- before a name indicates that it is a variable. This is then used in the actual tags liket his:
    img {
      padding: var(--spacing);
      background: var(--base);
      filter: blur(var(--blur));
    }
  These have to be declared as a variable taking some sort of value.
  
  New event listener: 'change'
    - I assume that this is called whenever an input is changed. Maybe it can only be listened
    for on inputs?
    
  New event listener: 'mousemove'
    - Is pretty self-explanatory, but just be aware of its existence.
    
  Reminder: a data attribute is something that you have made up.
  
  Using this.dataset will show you all of the attributes in a tag that are data attributes
  
  Day 4: Array Methods
    -The filter method takes a function that needs to test the values in some way using logic. If they
    are true, then they are saved into another array.
    -Quick Tip: console.table() prints out a table.
    
    -the sort method takes a function that has two parameters. Then you need to use if/else statements to check
    if one is let's say bigger than the other. If that is what you are looking for, return 1, else return -1.
    The items will bubble up or down the list.
    -This is a great place to use the ternary operator (?)
    
    The reduce method takes two types of arguments. First, it takes a function, which in turn can take 4 parameters. The
    first one is the accumulator, to save the running values. And the last three are the same as forEach: 
    element, index, array. The last argument that the reduce method takes is the value you want the accumulator to start at. If 
    nothing is given in this parameter, then it will start at the first element of the array.
  
    -Can turn a node list into an array by using the Array.from() method
    -Can use multiple array methods on the same array by using them on different lines.
      ex: 
        const de = links
               .map(link => link.textContent);
               .filter(streetName => streetName.includes('de'));
               
    -reduce is very very flexible. You can give it an empty object as the 'running total' and have it count up 
    the instances of everything in the array.
